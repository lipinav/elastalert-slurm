apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-{{ .Release.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  strategy: {{- .Values.strategy | toYaml | nindent 4 }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - image: {{ .Values.image }}:{{ .Values.tag }}
        name: elastalert-container
        ports:
        - containerPort: {{ .Values.port }}
        lifecycle:
          postStart:
            exec:
              command: [ "/bin/sh", "-c", "sed -i 's|10000|60000|' src/common/websocket.js"]
        resources: {{- .Values.resources | toYaml | nindent 10 }}
          requests:
            cpu: 10m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 300Mi
        volumeMounts:
        - mountPath: /opt/elastalert/config.yaml
          subPath: config.yaml
          name: conf-volume
        - mountPath: /opt/elastalert-server/config/config.json
          subPath: config.json
          name: conf2
        - mountPath: /opt/elastalert-server/config/config-test.yaml
          subPath: config-test.yaml
          name: conf3
        - mountPath: /opt/elastalert/rule_templates/
          name: rules-tmpl-volume
        - mountPath: /opt/elastalert/smtp.yaml
          subPath: smtp.yaml
          name: smtp-conf
      volumes:
      - name: conf-volume
        configMap:
          name: elastalert-config-yaml
      - name: conf2
        configMap:
          name: elastalert-config-json
      - name: conf3
        configMap:
          name: elastalert-config-test
      - name: rules-tmpl-volume
        configMap:
          name: elastalert-rule-templates
      - name: smtp-conf
        secret:
          secretName: {{ .Chart.Name }}
